Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ASSIGN
    COLON
    FUNCESP
    GTE
    LTE
    NUMPY
    QUOTE

Grammar

Rule 0     S' -> decvar
Rule 1     decvar -> VAR type ID decvarp
Rule 2     decvarp -> SEMICOLON decvarp
Rule 3     decvarp -> LBRACKET INT RBRACKET decvarpp
Rule 4     decvarpp -> SEMICOLON
Rule 5     decvarpp -> LBRACKET INT RBRACKET
Rule 6     type -> INT
Rule 7     type -> FLOAT
Rule 8     type -> CHAR
Rule 9     type -> STRING
Rule 10    function -> FUNCTION type ID LPAREN param RPAREN body
Rule 11    voidfunction -> FUNCTION VOID ID LPAREN param RPAREN body
Rule 12    body -> LBRACE pbody RBRACE
Rule 13    pbody -> decvar statement pbody
Rule 14    pbody -> statement pbody
Rule 15    pbody -> decvar
Rule 16    pbody -> <empty>
Rule 17    param -> empty
Rule 18    param -> type paramp
Rule 19    paramp -> ID
Rule 20    paramp -> ID COMMA param
Rule 21    exp -> texp
Rule 22    exp -> texp OR exp
Rule 23    texp -> gexp
Rule 24    texp -> gexp AND texp
Rule 25    gexp -> mexp
Rule 26    gexp -> mexp gexpp mexp
Rule 27    gexpp -> LT
Rule 28    gexpp -> GT
Rule 29    gexpp -> EQUAL
Rule 30    gexpp -> DIFF
Rule 31    mexp -> t
Rule 32    mexp -> t PLUS mexp
Rule 33    mexp -> t MINUS mexp
Rule 34    t -> f
Rule 35    t -> f MULT t
Rule 36    t -> f DIV t
Rule 37    f -> LPAREN exp RPAREN
Rule 38    f -> INT
Rule 39    f -> FLOAT
Rule 40    f -> var
Rule 41    f -> call
Rule 42    statement -> assign
Rule 43    statement -> call
Rule 44    statement -> read
Rule 45    statement -> print
Rule 46    statement -> if
Rule 47    statement -> while
Rule 48    statement -> for
Rule 49    statement -> funcesp
Rule 50    assign -> var EQUAL exp
Rule 51    read -> READ var
Rule 52    print -> PRINT LPAREN printp
Rule 53    printp -> exp RPAREN
Rule 54    printp -> exp COMMA printp
Rule 55    var -> ID
Rule 56    var -> ID LBRACKET exp RBRACKET
Rule 57    var -> ID LBRACKET exp RBRACKET LBRACKET exp RBRACKET
Rule 58    call -> ID LPAREN callp RPAREN
Rule 59    callp -> exp SEMICOLON callp
Rule 60    callp -> exp
Rule 61    if -> IF LPAREN exp RPAREN statement ifp
Rule 62    ifp -> <empty>
Rule 63    ifp -> ELSE statement
Rule 64    while -> WHILE LPAREN exp RPAREN statement whilep
Rule 65    whilep -> SEMICOLON
Rule 66    whilep -> statement whilep
Rule 67    for -> FOR LPAREN var SEMICOLON exp SEMICOLON exp RPAREN LBRACKET statement forp
Rule 68    forp -> RBRACKET
Rule 69    forp -> statement forp
Rule 70    funcesp -> array
Rule 71    funcesp -> vector
Rule 72    funcesp -> matrix
Rule 73    funcesp -> mean
Rule 74    funcesp -> layers
Rule 75    funcesp -> secuential
Rule 76    funcesp -> compile
Rule 77    funcesp -> fit
Rule 78    funcesp -> predict
Rule 79    funcesp -> getweights
Rule 80    array -> ID EQUAL ARRAY LPAREN var arrayp
Rule 81    arrayp -> RPAREN
Rule 82    arrayp -> COMMA var RPAREN
Rule 83    id -> EQUAL array
Rule 84    matrix -> ID EQUAL MATRIX LPAREN array matrixp
Rule 85    matrixp -> RPAREN
Rule 86    matrixp -> COMMA array RPAREN
Rule 87    mean -> MEAN LPAREN array RPAREN
Rule 88    layers -> ID EQUAL LAYERS LPAREN UNITS EQUAL INT RPAREN
Rule 89    sequential -> ID EQUAL SEQUENTIAL LPAREN LBRACKET layers sequentialp
Rule 90    sequentialp -> RBRACKET RPAREN
Rule 91    sequentialp -> COMMA layers sequentialp
Rule 92    compile -> sequential DOT COMPILE LPAREN RPAREN
Rule 93    fit -> ID EQUAL sequential DOT FIT LPAREN array COMMA array COMMA EPOCHS EQUAL INT COMMA VERBOSE EQUAL fitp
Rule 94    fitp -> TRUE RPAREN
Rule 95    fitp -> FALSE RPAREN
Rule 96    predict -> ID EQUAL sequential DOT PREDICT LPAREN LBRACKET predictp
Rule 97    predictp -> INT RBRACKET RPAREN
Rule 98    predictp -> FLOAT RBRACKET RPAREN
Rule 99    getweights -> layers DOT GETWEIGHTS LPAREN RPAREN

Terminals, with rules where they appear

AND                  : 24
ARRAY                : 80
ASSIGN               : 
CHAR                 : 8
COLON                : 
COMMA                : 20 54 82 86 91 93 93 93
COMPILE              : 92
DIFF                 : 30
DIV                  : 36
DOT                  : 92 93 96 99
ELSE                 : 63
EQUAL                : 29 50 80 83 84 88 88 89 93 93 93 96
FIT                  : 93
FLOAT                : 7 39 98
FOR                  : 67
FUNCESP              : 
FUNCTION             : 10 11
GETWEIGHTS           : 99
GT                   : 28
GTE                  : 
ID                   : 1 10 11 19 20 55 56 57 58 80 84 88 89 93 96
IF                   : 61
INT                  : 3 5 6 38 88 93 97
LAYERS               : 88
LBRACE               : 12
LBRACKET             : 3 5 56 57 57 67 89 96
LPAREN               : 10 11 37 52 58 61 64 67 80 84 87 88 89 92 93 96 99
LT                   : 27
LTE                  : 
MATRIX               : 84
MEAN                 : 87
MINUS                : 33
MULT                 : 35
NUMPY                : 
OR                   : 22
PLUS                 : 32
PREDICT              : 96
PRINT                : 52
QUOTE                : 
RBRACE               : 12
RBRACKET             : 3 5 56 57 57 68 90 97 98
READ                 : 51
RPAREN               : 10 11 37 53 58 61 64 67 81 82 85 86 87 88 90 92 94 95 97 98 99
SEMICOLON            : 2 4 59 65 67 67
SEQUENTIAL           : 89
STRING               : 9
VAR                  : 1
VOID                 : 11
WHILE                : 64
error                : 

Nonterminals, with rules where they appear

EPOCHS               : 93
FALSE                : 95
TRUE                 : 94
UNITS                : 88
VERBOSE              : 93
array                : 70 83 84 86 87 93 93
arrayp               : 80
assign               : 42
body                 : 10 11
call                 : 41 43
callp                : 58 59
compile              : 76
decvar               : 13 15 0
decvarp              : 1 2
decvarpp             : 3
empty                : 17
exp                  : 22 37 50 53 54 56 57 57 59 60 61 64 67 67
f                    : 34 35 36
fit                  : 77
fitp                 : 93
for                  : 48
forp                 : 67 69
funcesp              : 49
function             : 
getweights           : 79
gexp                 : 23 24
gexpp                : 26
id                   : 
if                   : 46
ifp                  : 61
layers               : 74 89 91 99
matrix               : 72
matrixp              : 84
mean                 : 73
mexp                 : 25 26 26 32 33
param                : 10 11 20
paramp               : 18
pbody                : 12 13 14
predict              : 78
predictp             : 96
print                : 45
printp               : 52 54
read                 : 44
secuential           : 75
sequential           : 92 93 96
sequentialp          : 89 91
statement            : 13 14 61 63 64 66 67 69
t                    : 31 32 33 35 36
texp                 : 21 22 24
type                 : 1 10 18
var                  : 40 50 51 67 80 82
vector               : 71
voidfunction         : 
while                : 47
whilep               : 64 66

